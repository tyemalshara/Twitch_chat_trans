goal: make it open on a browser window. there are frameworks that could make it ez but it need to be hosted 
mix your stream chat with big streamer chat - just for fun. your viewer will still see there messages but mixed with the big streamer messages.
use multithreading or -processing to queue up overloaded messages. so that after an overload situation, the queued messages get processed.
side-ideas: collect convos from users in chat by their names indiviually resulting in a file that contains the time of the chatter's message(messages have timestamp to it) and the content of it as well. every chatter will have a file bounded to his name containing the his chat messages and their timestamps. these messages are then passed to a LLM that will tell about the user's character. this webapp could be useful for companies that want to advertise their products/service on the streamer's channel but they want to make sure the streamer has the right community of a potential costumer. The streamer can also leverage the webapp by submitting the kind of his community so that companies can come to him if they see it's matching their target group of costumers.
